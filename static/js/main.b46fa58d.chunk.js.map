{"version":3,"sources":["components/Header/MenuHeaderItemList/MenuHeaderItem/MenuHeaderItem.js","components/Header/MenuHeaderItemList/MenuHeaderItemList.js","components/Header/HeaderButton/HeaderButton.js","components/Header/Header.js","container/CurationListContainer/CurationListContainer.action.js","components/CurationList/CurationListItem/CurationListItem.js","components/CurationList/CurationList.js","container/CurationListContainer/CurationListContainer.js","container/CurationListContainer/CurationListContainer.thunk.js","api/index.js","components/ScrollToTopButton/ScrollToTopButton.js","components/Footer/Footer.js","App.js","serviceWorker.js","container/CurationListContainer/CurationListContainer.reducer.js","store/rootReducer.js","index.js"],"names":["MenuHeaderItem_MenuHeaderItem","_ref","type","isPromotion","hrefUrl","concat","홈","인기","신규","시술별","className","anchorContent","react_default","a","createElement","href","MenuHeaderItemList","menuTypes","map","key","HeaderButton_HeaderButton","baseUrl","keyword","name","Header_Header","_ref2","idx","SUCCESS_CURATION_LIST","FAILURE_CURATION_LIST","CurationListItem_CurationListItem","info","groupId","mainImage","title","_id","lib_default","height","throttle","src","url","alt","description","CurationList","curations","item","CurationWrapper","this","props","getCurationsList","components_CurationList_CurationList","Component","mapDispatchToProps","dispatch","axios","get","then","data","items","payload","catch","e","CurationListContainer","connect","curationListContainer","ScrollToTopButton","window","scrollTo","onClick","handleClick","Footer_Footer","target","App","getBaseUrl","getMenuTypes","CurationListContainer_CurationListContainer","components_ScrollToTopButton_ScrollToTopButton","Boolean","location","hostname","match","initialState","error","CurationListContainerReducer","state","arguments","length","undefined","action","Object","objectSpread","reducers","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b46fa58d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MenuHeaderItem.css\";\n\nexport default ({ type }) => {\n  const isPromotion = type === \"기획전\";\n\n  const hrefBase = \"https://event.ddocdoc.com/\";\n\n  const hrefByType = {\n    홈: null,\n    인기: \"pop\",\n    신규: \"new\",\n    시술별: \"category/list\"\n  };\n\n  const hrefUrl = isPromotion ? \"/\" : `${hrefBase}${hrefByType[type]}`;\n\n  const className = isPromotion\n    ? \"menu-header-item menu-header-active-item\"\n    : \"menu-header-item\";\n\n  const anchorContent = isPromotion ? (\n    <span className=\"red-point\">{type}</span>\n  ) : (\n    type\n  );\n\n  const renderIcon = () =>\n    isPromotion && (\n      <div className=\"icon icon-curation-new-badge new-items-icon\" />\n    );\n  const renderAnchor = () => <a href={hrefUrl}>{anchorContent}</a>;\n\n  return (\n    <li className={className}>\n      <div>\n        {renderIcon()}\n        {renderAnchor()}\n      </div>\n    </li>\n  );\n};\n","import React from \"react\";\nimport MenuHeaderItem from \"./MenuHeaderItem/MenuHeaderItem\";\n\nexport default ({ menuTypes }) => {\n  return (\n    <ul>\n      {menuTypes.map(type => {\n        return <MenuHeaderItem type={type} key={type} />;\n      })}\n    </ul>\n  );\n};\n","import React from \"react\";\nimport \"./HeaderButton.css\";\n\nexport default ({ baseUrl, keyword, name }) => {\n  return (\n    <a\n      className={`page-header-button page-header-${name}`}\n      href={`${baseUrl}${name}`}\n    >\n      <i className={`icon icon-${name}`} />\n      <span className=\"sr-only\">{keyword}</span>\n    </a>\n  );\n};\n","import React from \"react\";\nimport MenuHeaderItemList from \"./MenuHeaderItemList/MenuHeaderItemList\";\nimport HeaderButton from \"./HeaderButton/HeaderButton\";\nimport \"./Header.css\";\n\nexport default ({ baseUrl, menuTypes }) => {\n  const headerButtonTypes = [\n    { name: \"search\", keyword: \"검색\" },\n    { name: \"bookmark\", keyword: \"즐겨찾기\" }\n  ];\n\n  return (\n    <header className=\"App-header\">\n      <div className=\"header-inner\">\n        <div className=\"page-header\">\n          <h1>\n            <a href={baseUrl}>\n              <i className=\"icon icon-ddocdoc-bi\" />\n            </a>\n          </h1>\n          <div className=\"page-header-tool-area\">\n            {headerButtonTypes.map(({ name, keyword }, idx) => (\n              <HeaderButton\n                key={idx}\n                name={name}\n                baseUrl={baseUrl}\n                keyword={keyword}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"menu-header\">\n          <MenuHeaderItemList menuTypes={menuTypes} />\n        </div>\n      </div>\n    </header>\n  );\n};\n","export const SUCCESS_CURATION_LIST = \"SUCCESS_CURATION_LIST\";\nexport const FAILURE_CURATION_LIST = \"FAILURE_CURATION_LIST\";\n\nexport const successCurationList = curations => ({\n  type: SUCCESS_CURATION_LIST,\n  payload: curations\n});\n\nexport const failureCurationList = error => ({\n  type: FAILURE_CURATION_LIST,\n  payload: error\n});\n","import React from \"react\";\nimport LazyLoad from \"react-lazyload\";\nimport \"./CurationListItem.css\";\n\nexport default ({ info }) => {\n  const { groupId, mainImage, title } = info;\n\n  return (\n    <li className=\"curation-list-item\">\n      <a\n        className=\"curation-list-item-link\"\n        href={\"https://event.ddocdoc.com/curation/\" + groupId._id}\n      >\n        <LazyLoad height={300} throttle={200}>\n          <img className=\"fade show\" src={mainImage.url} alt={title} />\n        </LazyLoad>\n\n        <div className=\"curation-list-item-figcaption\">\n          <h5 className=\"curation-list-item-heading\">{title}</h5>\n          <p className=\"curation-list-item-description\">\n            <strong className=\"curation-list-item-premark\">기획전</strong>\n            <b> | </b>\n            {groupId.description}\n          </p>\n        </div>\n      </a>\n    </li>\n  );\n};\n","import React from \"react\";\nimport CurationListItem from \"./CurationListItem/CurationListItem\";\n\nconst CurationList = ({ curations }) => {\n  return (\n    <div className=\"content\">\n      <ul>\n        {curations.map(item => (\n          <CurationListItem key={item.groupId._id} info={item} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CurationList;\n","import React, { Component } from \"react\";\nimport { getCurationsList } from \"./CurationListContainer.thunk\";\nimport { connect } from \"react-redux\";\nimport CurationList from \"../../components/CurationList/CurationList\";\n\nclass CurationWrapper extends Component {\n  async componentDidMount() {\n    await this.props.getCurationsList();\n  }\n\n  render() {\n    return <CurationList curations={this.props.curations} />;\n  }\n}\n\nconst mapStateToProps = ({ curationListContainer }) => ({\n  curations: curationListContainer.curations\n});\n\nconst mapDispatchToProps = {\n  getCurationsList\n};\n\nconst CurationListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurationWrapper);\n\nexport default CurationListContainer;\n","import { getCurationsListApi } from \"../../api\";\nimport {\n  successCurationList,\n  failureCurationList\n} from \"./CurationListContainer.action\";\n\nexport const getCurationsList = () => dispatch => {\n  getCurationsListApi()\n    .then(({ data }) => {\n      dispatch(successCurationList(data.items));\n    })\n    .catch(e => {\n      dispatch(failureCurationList(e));\n    });\n};\n","import axios from \"axios\";\n\nexport const getCurationsListApi = () => {\n  return axios.get(\"https://api.ddocdoc.com/v2/eventBanner?populate=true\");\n};\n","import React, { Component } from \"react\";\nimport \"./ScrollToTopButton.css\";\n\nclass ScrollToTopButton extends Component {\n  handleClick() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div>\n        <aside className=\"mobile-only\">\n          <div className=\"right-bottom-tools\">\n            <div className=\"right-bottom-tools-top-button\">\n              <span\n                className=\"right-bottom-tools-top-button-wrap\"\n                onClick={this.handleClick}\n              >\n                <i className=\"icon icon-top\" />\n              </span>\n              <span className=\"sr-only\">Top</span>\n            </div>\n          </div>\n        </aside>\n      </div>\n    );\n  }\n}\n\nexport default ScrollToTopButton;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nexport default () => {\n  return (\n    <footer className=\"footer\">\n      <h5 className=\"footer-bi-link\">\n        <a href=\"https://www.ddocdoc.com\">\n          <i className=\"icon icon-ddocdoc-bi-gray\" />\n          <span className=\"sr-only\">똑닥</span>\n        </a>\n      </h5>\n      <ul className=\"footer-link-list\">\n        <li>\n          <a href=\"https://www.ddocdoc.com/termsofservice\" target=\"terms1\">\n            이용약관\n          </a>\n        </li>\n        <li>\n          <a href=\"https://www.ddocdoc.com/privacypolicy\" target=\"terms2\">\n            개인정보취급방침\n          </a>\n        </li>\n        <li>\n          <a href=\"https://www.ddocdoc.com/contact?from=ddocdoc\">제휴문의</a>\n        </li>\n      </ul>\n      <small className=\"footer-copyright\">\n        Copyright © B-bros Corp. All rights reserved.\n      </small>\n    </footer>\n  );\n};\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport CurationListContainer from \"./container/CurationListContainer/CurationListContainer\";\nimport ScrollToTopButton from \"./components/ScrollToTopButton/ScrollToTopButton\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\";\n\nclass App extends Component {\n  getBaseUrl = () => \"https://event.ddocdoc.com/\";\n  getMenuTypes = () => [\"홈\", \"인기\", \"신규\", \"시술별\", \"기획전\"];\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header baseUrl={this.getBaseUrl()} menuTypes={this.getMenuTypes()} />\n        <CurationListContainer />\n        <ScrollToTopButton />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SUCCESS_CURATION_LIST,\n  FAILURE_CURATION_LIST\n} from \"./CurationListContainer.action\";\n\n// 초기 상태를 정의합니다\nconst initialState = {\n  curations: [],\n  error: \"\"\n};\n\nfunction CurationListContainerReducer(state = initialState, action) {\n  switch (action.type) {\n    case SUCCESS_CURATION_LIST:\n      return {\n        ...state,\n        curations: action.payload\n      };\n    case FAILURE_CURATION_LIST:\n      return {\n        ...state,\n        error: \"FAILURE_CURATION_LIST\"\n      };\n    default:\n      return state;\n  }\n}\n\nexport default CurationListContainerReducer;\n","import { combineReducers } from \"redux\";\n\nimport CurationListContainerReducer from \"../container/CurationListContainer/CurationListContainer.reducer\";\n\nconst reducers = combineReducers({\n  curationListContainer: CurationListContainerReducer\n});\n\nexport default reducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport reducers from \"./store/rootReducer\";\n\nconst store = createStore(reducers, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}